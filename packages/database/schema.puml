@startuml
skinparam nodesep 10
hide circle
hide empty members
class "SpaceAccess" [[{An access control entry for a space}]] {
    {field} editor : boolean  
}
class "Account" [[{A user account on a platform}]] {
    {field} id : integer  
    {field} write_permission : boolean  
    {field} active : boolean  
    {field} account_local_id : string  
}
class "Space" [[{A space on a platform representing a community engaged in a conversation}]] {
    {field} id : integer  
    {field} url : string  
    {field} name : string  
}
"SpaceAccess" --> "1" "Account" : "account"
"SpaceAccess" --> "0..1" "Space" : "space"
class "Platform" [[{A data platform where discourse happens}]] {
    {field} id : integer  
    {field} name : string  
    {field} url : string  
}
class "Content" [[{A unit of content}]] {
    {field} id : integer  
    {field} source_local_id : string  
    {field} created : datetime  
    {field} text : string  
    {field} metadata : JSON  
    {field} scale : Scale  
    {field} last_modified : datetime  
}
class "Document" [[{None}]] {
    {field} id : integer  
    {field} source_local_id : string  
    {field} url : string  
    {field} created : datetime  
    {field} metadata : JSON  
    {field} last_modified : datetime  
    {field} contents : blob  
}
class "Concept" [[{An abstract concept, claim or relation}]] {
    {field} id : integer  
    {field} epistemic_status : EpistemicStatus  
    {field} name : string  
    {field} description : string  
    {field} created : datetime  
    {field} last_modified : datetime  
    {field} arity : integer  
    {field} content : JSON  
    {field} is_schema : boolean  
}
"Space" --> "1" "Platform" : "platform"
"Content" --> "0..1" "Space" : "space"
"Document" --> "0..1" "Space" : "space"
"Concept" --> "0..1" "Space" : "space"
"Account" --> "1" "Platform" : "platform"
abstract "Agent" [[{An agent that acts in the system}]] {
    {field} id : integer  
    {field} type : EntityType  
}
"Document" --> "0..*" "Agent" : "contributors"
"Document" --> "1" "Agent" : "author"
"Content" --> "1" "Document" : "document"
class "ContentEmbedding" [[{None}]] {
    {field} model : EmbeddingName  
    {field} vector : vector  
    {field} obsolete : boolean  
}
"ContentEmbedding" --> "1" "Content" : "target"
"Content" --> "0..1" "Content" : "part_of"
"Content" --> "0..*" "Agent" : "contributors"
"Content" --> "1" "Agent" : "creator"
"Content" --> "1" "Agent" : "author"
"Concept" --> "0..1" "Content" : "represented_by"
class "ConceptSchema" [[{None}]] {
    {field} id(i) : integer  
    {field} epistemic_status(i) : EpistemicStatus  
    {field} name(i) : string  
    {field} description(i) : string  
    {field} created(i) : datetime  
    {field} last_modified(i) : datetime  
    {field} arity(i) : integer  
    {field} content(i) : JSON  
    {field} is_schema(i) : boolean  
}
"Concept" --> "1" "ConceptSchema" : "schema"
"Concept" --> "0..*" "Agent" : "contributors"
"Concept" --> "1" "Agent" : "author"
"Concept" ^-- "ConceptSchema"
class "Person" [[{A person using the system}]] {
    {field} name : string  
    {field} orcid : string  
    {field} email : string  
    {field} id(i) : integer  
    {field} type(i) : EntityType  
}
class "AutomatedAgent" [[{An automated agent}]] {
    {field} metadata : JSON  
    {field} name : string  
    {field} deterministic : boolean  
    {field} version : string  
    {field} id(i) : integer  
    {field} type(i) : EntityType  
}
"Account" --> "1" "Agent" : "agent"
"Agent" ^-- "Person"
"Agent" ^-- "AutomatedAgent"
@enduml
